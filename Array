1.Write a program to accept N values into an integer array and display the contents of the array in the reverse order.
#include <stdio.h>

int main() {
    int arr[100];  
    int N;

    printf("Enter the number of elements: ");
    scanf("%d", &N);

    printf("Enter %d elements:\n", N);
    for (int i = 0; i < N; i++) {
        scanf("%d", &arr[i]);
    }

    printf("Elements in reverse order:\n");
    for (int i = N - 1; i >= 0; i--) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}
________________________________________________________________________________________________________________________________________________________________________
2.Write a  program to count the number of 0s and 1s in an array that is in random order. You may assume that the array consists of only 0s and 1s
#include <stdio.h>

int main() {
    int arr[100]; 
    int N;
    int count0 = 0, count1 = 0;
    printf("Enter the number of elements: ");
    scanf("%d", &N);

    printf("Enter %d elements (0s and 1s only):\n", N);
    for (int i = 0; i < N; i++) {
        scanf("%d", &arr[i]);
    }
    for (int i = 0; i < N; i++) {
        if (arr[i] == 0) {
            count0++;
        } else if (arr[i] == 1) {
            count1++;
        } else {
            printf("Invalid input. Array should only contain 0s and 1s.\n");
            return 1;  
        }
    }
    printf("Number of 0s: %d\n", count0);
    printf("Number of 1s: %d\n", count1);

    return 0;
}
_______________________________________________________________________________________________________________________________________________________________________________
3. Write a  program to print the count of the elements in an array whose values are lesser than a key element in an unsorted array.
#include <stdio.h>

int main() {
    int arr[100];
    int N, key;
    int count = 0;

    printf("Enter the number of elements: ");
    scanf("%d", &N);

    printf("Enter %d elements:\n", N);
    for (int i = 0; i < N; i++) {
        scanf("%d", &arr[i]);
    }

    // Input the key element
    printf("Enter the key element: ");
    scanf("%d", &key);

    for (int i = 0; i < N; i++) {
        if (arr[i] < key) {
            count++;
        }
    }
    printf("Number of elements less than %d: %d\n", key, count);

    return 0;
}
_____________________________________________________________________________________________________________________________________________________________________
4.Write a  Program to print all the repeated elements in a sorted array.
#include <stdio.h>

int main() {
    int arr[100]; 
    int N;

    printf("Enter the number of elements: ");
    scanf("%d", &N)
    printf("Enter %d sorted elements:\n", N);
    for (int i = 0; i < N; i++) {
        scanf("%d", &arr[i]);
    }
    printf("Repeated elements in the sorted array:\n");
    int i = 0;
    while (i < N) 
        int count = 1;
        while (i < N - 1 && arr[i] == arr[i + 1]) {
            count++;
            i++;
        }
        if (count > 1) {
            printf("%d (repeated %d times)\n", arr[i], count);
        }
        
        i++;
    }

    return 0;
}
__________________________________________________________________________________________________________________________________________________________________________
5.Write a program to search an element in the given array and print the searched elements index. If no such elements were found print -1
#include <stdio.h>

int main() {
    int arr[100];  
    int N, key;
    int found = 0; 
    int index = -1;

    printf("Enter the number of elements: ");
    scanf("%d", &N);

    printf("Enter %d elements:\n", N);
    for (int i = 0; i < N; i++) {
        scanf("%d", &arr[i]);
    }

    printf("Enter the element to search: ");
    scanf("%d", &key);

  
    for (int i = 0; i < N; i++) {
        if (arr[i] == key) {
            found = 1;  
            index = i;  
            break;      
        }
    }
    if (found) {
        printf("Element %d found at index %d\n", key, index);
    } else {
        printf("Element %d not found\n", key);
    }

    return 0;
}
_________________________________________________________________________________________________________________________________________________________________
6.You are given an array of 0s and 1s in random order. Segregate 0s on left side and 1s on right side of the array . 
#include <stdio.h>

void segregateZerosOnes(int arr[], int N) {
    int left = 0;      
    int right = N - 1;  
    
    while (left <= right) {      
        while (arr[left] == 0 && left <= right) {
            left++;
        }
    
        while (arr[right] == 1 && left <= right) {
            right--;
        }
        
        if (left <= right) {
            int temp = arr[left];
            arr[left] = arr[right];
            arr[right] = temp;
            left++;
            right--;
        }
    }
}

int main() {
    int arr[100];  
    int N;

    printf("Enter the number of elements: ");
    scanf("%d", &N);
    printf("Enter %d elements (0s and 1s only):\n", N);
    for (int i = 0; i < N; i++) {
        scanf("%d", &arr[i]);
    }
    segregateZerosOnes(arr, N);
  
    printf("Segregated array: ");
    for (int i = 0; i < N; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}
_______________________________________________________________________________________________________________________________________________
7.Write a program  to replace every element in an array with the sum of its right side elements
#include <stdio.h>

void replaceWithRightSum(int arr[], int N) {
    int sum = 0;  // Initialize sum to 0
    
    for (int i = N - 1; i >= 0; i--) {
        int temp = arr[i]; 
        arr[i] = sum;      
        sum += temp;       
    }
}

int main() {
    int arr[100];  
    int N;

    printf("Enter the number of elements: ");
    scanf("%d", &N);
    printf("Enter %d elements:\n", N);
    for (int i = 0; i < N; i++) {
        scanf("%d", &arr[i]);
    }
    replaceWithRightSum(arr, N);

    
    printf("Array after replacing with sum of right side elements:\n");
    for (int i = 0; i < N; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}
________________________________________________________________________________________________________________________________________________________________________-
8.Write a program  to reverse the array elements
#include <stdio.h>

void reverseArray(int arr[], int N) {
    int left = 0;
    int right = N - 1;
    while (left < right) {
        int temp = arr[left];
        arr[left] = arr[right];
        arr[right] = temp;
        left++;
        right--;
    }
}
int main() {
    int arr[100]; 
    int N;
    printf("Enter the number of elements: ");
    scanf("%d", &N);

    
    printf("Enter %d elements:\n", N);
    for (int i = 0; i < N; i++) {
        scanf("%d", &arr[i]);
    }

   
    reverseArray(arr, N);

    printf("Reversed array:\n");
    for (int i = 0; i < N; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}
__________________________________________________________________________________________________________________________________________________-
9.Write a program  to insert the value at given position in the array.
#include <stdio.h>
#define MAX_SIZE 100
int main() {
    int arr[MAX_SIZE];
    int size, i, pos, value;
    printf("Enter size of the array: ");
    scanf("%d", &size);
    printf("Enter elements of the array:\n");
    for (i = 0; i < size; i++) {
        scanf("%d", &arr[i]);
    }
    printf("Enter the position where you want to insert (0 - based index): ");
    scanf("%d", &pos);
    printf("Enter the value to insert: ");
    scanf("%d", &value);
    for (i = size - 1; i >= pos; i--) {
        arr[i + 1] = arr[i];
    }
    arr[pos] = value;
    size++;
    printf("Array after insertion:\n");
    for (i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}
_____________________________________________________________________________________________________________________________________________________________________________
10.Write a program  to delete the value at given position from the array.
#include <stdio.h>

void deleteElement(int arr[], int *size, int position) {
    if (position < 0 || position >= *size) {
        printf("Invalid position!\n");
        return;
    }

    for (int i = position; i < *size - 1; i++) {
        arr[i] = arr[i + 1];
    }

    // Decrease the size of the array
    (*size)--;
}

void printArray(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main() {
    int arr[100]; 
    int size, position;

    printf("Enter the size of the array: ");
    scanf("%d", &size);

    printf("Enter %d elements:\n", size);
    for (int i = 0; i < size; i++) {
        scanf("%d", &arr[i]);
    }

    printf("Enter the position to delete (0 to %d): ", size - 1);
    scanf("%d", &position);

    deleteElement(arr, &size, position);

    printf("Array after deletion:\n");
    printArray(arr, size);

    return 0;
}
________________________________________________________________________________________________________________________________________________________________________________







